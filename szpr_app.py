import streamlit as st
import numpy as np

st.set_page_config(page_title="OMM ‚Äì –ø—Ä–æ–≥–Ω–æ–∑ –°–°–ó–†–ü –ú–•–î–ê", page_icon="üçº")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  HEADER  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
st.header("OMM –ü–†–û–ì–ù–û–ó –°–ó–†–ü –ú–•–î–ê")

st.markdown(
"""
**–¶–µ–ª—å**  
1. –ò—Å—Ö–æ–¥—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö I-–≥–æ —Ç—Ä–∏–º–µ—Å—Ç—Ä–∞ (11 ‚Äì 13 ‚Å∂/‚Çá –Ω–µ–¥–µ–ª—å) –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
—Å–∏–Ω–¥—Ä–æ–º–∞ —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ —Ä–æ—Å—Ç–∞ –ø–ª–æ–¥–∞ (–°–°–ó–†–ü).  
2. –ï—Å–ª–∏ —Ä–∏—Å–∫ –≤—ã—Å–æ–∫, –æ—Ü–µ–Ω–∏—Ç—å –∏—Å—Ö–æ–¥ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ (–≥–∏–±–µ–ª—å –æ–¥–Ω–æ–≥–æ / –æ–±–æ–∏—Ö –ø–ª–æ–¥–æ–≤) –Ω–∞
–æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø—É–ª—å—Å–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ (–ü–ò) –≤ –≤–µ–Ω–æ–∑–Ω–æ–º –ø—Ä–æ—Ç–æ–∫–µ.
"""
)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  INPUTS  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
st.header("–í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö (I-–π —Ç—Ä–∏–º–µ—Å—Ç—Ä)")

col1, col2 = st.columns(2)

with col1:
    ktr1 = st.number_input("–ö–¢–† 1 (–º–º):", min_value=0.0, step=0.1)
    tvp1 = st.number_input("–¢–í–ü 1 (–º–º):", min_value=0.0, step=0.1)
with col2:
    ktr2 = st.number_input("–ö–¢–† 2 (–º–º):", min_value=0.0, step=0.1)
    tvp2 = st.number_input("–¢–í–ü 2 (–º–º):", min_value=0.0, step=0.1)

tkr = st.radio(
    "–¢—Ä–∏–∫—É—Å–ø–∏–¥–∞–ª—å–Ω–∞—è —Ä–µ–≥—É—Ä–≥–∏—Ç–∞—Ü–∏—è (–¢–ö–†) —Ö–æ—Ç—è –±—ã —É –æ–¥–Ω–æ–≥–æ –ø–ª–æ–¥–∞:",
    options=[0, 1],
    format_func=lambda x: "–ï—Å—Ç—å" if x == 1 else "–ù–µ—Ç",
    horizontal=True,
)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  STAGE 1  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
st.subheader("1-–π —ç—Ç–∞–ø ‚Üí —Ä–∏—Å–∫ –°–°–ó–†–ü")

# –õ–∏–Ω–µ–π–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è
Z = (
    2.75
    + 0.20 * (ktr1 - ktr2)
    + 0.71 * (tvp1 - tvp2)
    - 3.75 * min(tvp1, tvp2)
    + 2.27 * tkr
)

# –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è
prob = 1 / (1 + np.exp(-Z))

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
st.metric("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –°–°–ó–†–ü", f"{prob*100:.1f} %")

if prob > 0.15:
    st.error("‚ö†Ô∏è –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –°–°–ó–†–ü")
else:
    st.success("–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫ –°–°–ó–†–ü")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  STAGE 2  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
st.subheader("2-–π —ç—Ç–∞–ø ‚Üí –ø—Ä–æ–≥–Ω–æ–∑ –∏—Å—Ö–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–∏—Å–∫ –≤—ã—Å–æ–∫)")

if prob > 0.15:
    pi = st.number_input(
        "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ü–ò –≤ –≤–µ–Ω–æ–∑–Ω–æ–º –ø—Ä–æ—Ç–æ–∫–µ (—É –ø–ª–æ–¥–æ–≤):", min_value=0.0, step=0.01
    )

    if pi > 1.3:
        st.error(
            "–ü—Ä–æ–≥–Ω–æ–∑: –≤–µ—Ä–æ—è—Ç–Ω–∞ –≥–∏–±–µ–ª—å –æ–¥–Ω–æ–≥–æ/–¥–≤—É—Ö –ø–ª–æ–¥–æ–≤.\n"
            "üëâ –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–∞–≥—É–ª—è—Ü–∏—é —Å–æ—Å—É–¥–æ–≤ –ø—É–ø–æ–≤–∏–Ω—ã –º–µ–Ω—å—à–µ–≥–æ –ø–ª–æ–¥–∞."
        )
    else:
        st.success(
            "–ü—Ä–æ–≥–Ω–æ–∑: –æ–±–∞ –ø–ª–æ–¥–∞, –≤–µ—Ä–æ—è—Ç–Ω–æ, –≤—ã–∂–∏–≤—É—Ç.\n"
            "üëâ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ."
        )
else:
    st.info("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ü–ò, –µ—Å–ª–∏ —Ä–∏—Å–∫ –°–°–ó–†–ü –æ–∫–∞–∑–∞–ª—Å—è –≤—ã—Å–æ–∫–∏–º –≤—ã—à–µ.")
