# app.py
# ¬´OMM SUPERIMPOSED PREECLAMPSIA PREDICT¬ª (single-patient calculator)
# D = 2.45*X1 - 4.63*X2 + 2.64*X3 + 4.22*X4 - 57.11*X5 + 117.62*X6 - 3.96
# Classification: D > 0 ‚Üí –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫; –∏–Ω–∞—á–µ –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫

import streamlit as st
import pandas as pd

st.set_page_config(
    page_title="OMM SUPERIMPOSED PREECLAMPSIA PREDICT",
    page_icon="ü©∫",
    layout="centered",
)

# ----------------------- Model constants & helpers -----------------------

COEFFS = {
    "X1": 2.45,     # –≥–∏–ø–æ–¥–∏–Ω–∞–º–∏—è (1/0)
    "X2": -4.63,    # —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è –ê–ì –≤ –ø—Ä–µ–¥—ã–¥—É—â—É—é –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å (1/0)
    "X3": 2.64,     # –î–ê–î >100 –≤ I —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ (1/0)
    "X4": 4.22,     # –î–ê–î >100 –≤–æ II —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ (1/0)
    "X5": -57.11,   # —ç–∫—Å–ø—Ä–µ—Å—Å–∏—è miR-181a (—á–∏—Å–ª–æ)
    "X6": 117.62,   # —ç–∫—Å–ø—Ä–µ—Å—Å–∏—è miR-221 (—á–∏—Å–ª–æ)
}
INTERCEPT = -3.96

def compute_D(x1, x2, x3, x4, x5, x6):
    return (
        COEFFS["X1"] * x1
        + COEFFS["X2"] * x2
        + COEFFS["X3"] * x3
        + COEFFS["X4"] * x4
        + COEFFS["X5"] * x5
        + COEFFS["X6"] * x6
        + INTERCEPT
    )

def risk_label(D):
    return "–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫" if D > 0 else "–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫"

def contribution_table(x1, x2, x3, x4, x5, x6):
    vals = {"X1": x1, "X2": x2, "X3": x3, "X4": x4, "X5": x5, "X6": x6}
    rows = []
    for k, v in vals.items():
        rows.append(
            {"–ü—Ä–∏–∑–Ω–∞–∫": k, "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç": COEFFS[k], "–ó–Ω–∞—á–µ–Ω–∏–µ": v, "–í–∫–ª–∞–¥": COEFFS[k] * v}
        )
    df = pd.DataFrame(rows)
    df.loc[len(df)] = ["–°–º–µ—â–µ–Ω–∏–µ (intercept)", "", "", INTERCEPT]
    return df

# ----------------------- UI -----------------------

st.title("ü©∫ OMM SUPERIMPOSED PREECLAMPSIA PREDICT")
st.caption("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞ –ø—Ä–µ—ç–∫–ª–∞–º–ø—Å–∏–∏ —É –ø–∞—Ü–∏–µ–Ω—Ç–æ–∫ —Å —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–π –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏–µ–π.")

st.subheader("–í–≤–æ–¥ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
c1, c2 = st.columns(2)

with c1:
    X1 = 1 if st.checkbox("X1: –ì–∏–ø–æ–¥–∏–Ω–∞–º–∏—è (–¥–∞)", value=False) else 0
    X2 = 1 if st.checkbox("X2: –•—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è –ê–ì –≤ –ø—Ä–µ–¥—ã–¥—É—â—É—é –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å (–¥–∞)", value=False) else 0
    X3 = 1 if st.checkbox("X3: –î–ê–î >100 –º–º —Ä—Ç. —Å—Ç. –≤ I —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ (–¥–∞)", value=False) else 0
    X4 = 1 if st.checkbox("X4: –î–ê–î >100 –º–º —Ä—Ç. —Å—Ç. –≤–æ II —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ (–¥–∞)", value=False) else 0

with c2:
    X5 = st.number_input(
        "X5: –£—Ä–æ–≤–µ–Ω—å —ç–∫—Å–ø—Ä–µ—Å—Å–∏–∏ miR-181a (I —Ç—Ä–∏–º–µ—Å—Ç—Ä)",
        min_value=0.0, step=0.0001, format="%.6f", value=0.0,
    )
    X6 = st.number_input(
        "X6: –£—Ä–æ–≤–µ–Ω—å —ç–∫—Å–ø—Ä–µ—Å—Å–∏–∏ miR-221 (I —Ç—Ä–∏–º–µ—Å—Ç—Ä)",
        min_value=0.0, step=0.0001, format="%.6f", value=0.0,
    )

st.markdown("---")

# Keep last result shown until the next calculation
if "last_result" not in st.session_state:
    st.session_state.last_result = None

if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"):
    D = compute_D(X1, X2, X3, X4, X5, X6)
    st.session_state.last_result = {
        "D": D,
        "X": (X1, X2, X3, X4, X5, X6),
        "label": risk_label(D),
    }

# Show result if available
res = st.session_state.last_result
if res is not None:
    D = res["D"]
    lbl = res["label"]
    if D > 0:
        st.error(f"**{lbl}**  \n–°—á—ë—Ç D = **{D:.3f}** (–ø–æ—Ä–æ–≥ 0)")
    else:
        st.success(f"**{lbl}**  \n–°—á—ë—Ç D = **{D:.3f}** (–ø–æ—Ä–æ–≥ 0)")

    with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å –≤–∫–ª–∞–¥ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–∑–Ω–∞–∫–∞"):
        x1, x2, x3, x4, x5, x6 = res["X"]
        dfc = contribution_table(x1, x2, x3, x4, x5, x6)
        st.dataframe(dfc, use_container_width=True)
